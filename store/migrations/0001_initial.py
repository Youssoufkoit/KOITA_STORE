# Generated by Django 5.2.7 on 2025-10-21 14:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom de la cat√©gorie')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('icon', models.CharField(blank=True, help_text="Classe CSS de l'ic√¥ne (ex: fas fa-gamepad)", max_length=100, verbose_name='Ic√¥ne')),
                ('image', models.ImageField(blank=True, help_text="Image d'illustration de la cat√©gorie (recommand√©: 400x300px)", null=True, upload_to='categories/', verbose_name='Image de la cat√©gorie')),
                ('order', models.IntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de cr√©ation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Derni√®re modification')),
            ],
            options={
                'verbose_name': 'Cat√©gorie',
                'verbose_name_plural': 'Cat√©gories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant total')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('processing', 'En cours'), ('completed', 'Compl√©t√©e'), ('cancelled', 'Annul√©e')], default='pending', max_length=20)),
                ('free_fire_id', models.CharField(blank=True, help_text='ID Free Fire du joueur pour les recharges automatiques', max_length=50, verbose_name='ID Free Fire')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Commande',
                'verbose_name_plural': 'Commandes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('order', 'Commande'), ('redeem', 'Code REDEEM'), ('info', 'Information'), ('warning', 'Avertissement')], default='info', max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('redeem_code', models.CharField(blank=True, max_length=50)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_notifications', to=settings.AUTH_USER_MODEL)),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_notifications', to='store.order')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nom du produit')),
                ('description', models.TextField(verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Prix (FCFA)')),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/', verbose_name='Image')),
                ('stock', models.IntegerField(default=0, verbose_name='Stock disponible')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('is_featured', models.BooleanField(default=False, verbose_name='Produit vedette')),
                ('account_level', models.IntegerField(blank=True, help_text='Ex: 50, 65, 80, etc.', null=True, verbose_name='Niveau du compte')),
                ('account_rank', models.CharField(blank=True, help_text='Ex: H√©ro√Øque, Grand Ma√Ætre, Conqueror, etc.', max_length=50, verbose_name='Rang/Grade')),
                ('has_elite_pass', models.BooleanField(default=False, verbose_name='Elite Pass actif')),
                ('diamonds_included', models.IntegerField(blank=True, help_text='Nombre de diamants sur le compte', null=True, verbose_name='Diamants inclus')),
                ('skins_list', models.TextField(blank=True, help_text='Listez les skins rares (un par ligne)', verbose_name='Liste des skins/bundles')),
                ('weapons_list', models.TextField(blank=True, help_text='Listez les armes disponibles (un par ligne)', verbose_name='Liste des armes')),
                ('vehicles_list', models.TextField(blank=True, help_text='Listez les v√©hicules disponibles (un par ligne)', verbose_name='Liste des v√©hicules/skyboards')),
                ('pets_list', models.TextField(blank=True, help_text='Listez les pets disponibles (un par ligne)', verbose_name='Liste des pets')),
                ('email_changeable', models.BooleanField(default=True, verbose_name='Email changeable')),
                ('phone_linked', models.BooleanField(default=False, verbose_name='Num√©ro de t√©l√©phone li√©')),
                ('facebook_linked', models.BooleanField(default=False, verbose_name='Facebook li√©')),
                ('account_region', models.CharField(blank=True, choices=[('', 'Non sp√©cifi√©'), ('afrique', 'Afrique'), ('europe', 'Europe'), ('asie', 'Asie'), ('amerique', 'Am√©rique'), ('oceanie', 'Oc√©anie')], help_text='Ex: Afrique, Europe, Asie, etc.', max_length=50, verbose_name='R√©gion du compte')),
                ('total_matches', models.IntegerField(blank=True, null=True, verbose_name='Nombre total de matchs')),
                ('win_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Ex: 65.50 pour 65.50%', max_digits=5, null=True, verbose_name='Taux de victoire (%)')),
                ('internal_notes', models.TextField(blank=True, help_text="Notes visibles uniquement par l'admin (non affich√©es sur le site)", verbose_name='Notes internes')),
                ('is_redeem_product', models.BooleanField(default=False, help_text='Cocher si ce produit n√©cessite un code REDEEM', verbose_name='Produit REDEEM')),
                ('redeem_code', models.CharField(blank=True, help_text='Code unique √† fournir apr√®s achat (pour produits REDEEM uniquement)', max_length=50, verbose_name='Code REDEEM')),
                ('redeem_code_used', models.BooleanField(default=False, help_text='Indique si le code a d√©j√† √©t√© vendu', verbose_name='Code REDEEM utilis√©')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date de cr√©ation')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Derni√®re modification')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='store.category', verbose_name='Cat√©gorie')),
            ],
            options={
                'verbose_name': 'Produit',
                'verbose_name_plural': 'Produits',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('redeem_code', models.CharField(blank=True, max_length=50, verbose_name='Code REDEEM fourni')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='store.order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
            options={
                'verbose_name': 'Article de commande',
                'verbose_name_plural': 'Articles de commande',
            },
        ),
        migrations.CreateModel(
            name='AccountProduct',
            fields=[
            ],
            options={
                'verbose_name': 'Compte de Jeu',
                'verbose_name_plural': 'üéÆ Comptes de Jeux',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('store.product',),
        ),
        migrations.CreateModel(
            name='RechargeProduct',
            fields=[
            ],
            options={
                'verbose_name': 'Recharge',
                'verbose_name_plural': 'üì± Recharges (Diamants, etc.)',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('store.product',),
        ),
    ]
